=== OPTIMIZED GENERATING TEST DATA FOR SCALE: 100000 ===
📝 Generating reference data with optimizations...
   ✅ Reference data generated: 10 schools, 20 konsentrasi, 15 taksonomi
📝 Generating 100000 soalujian records with optimizations...
🚀 Generating PostgreSQL data with batch processing...
  📊 PostgreSQL: Batch 1 completed - 2000/100000 records (2%)
  📊 PostgreSQL: Batch 2 completed - 4000/100000 records (4%)
  📊 PostgreSQL: Batch 3 completed - 6000/100000 records (6%)
  📊 PostgreSQL: Batch 4 completed - 8000/100000 records (8%)
  📊 PostgreSQL: Batch 5 completed - 10000/100000 records (10%)
  📊 PostgreSQL: Batch 6 completed - 12000/100000 records (12%)
  📊 PostgreSQL: Batch 7 completed - 14000/100000 records (14%)
  📊 PostgreSQL: Batch 8 completed - 16000/100000 records (16%)
  📊 PostgreSQL: Batch 9 completed - 18000/100000 records (18%)
  📊 PostgreSQL: Batch 10 completed - 20000/100000 records (20%)
  📊 PostgreSQL: Batch 11 completed - 22000/100000 records (22%)
  📊 PostgreSQL: Batch 12 completed - 24000/100000 records (24%)
  📊 PostgreSQL: Batch 13 completed - 26000/100000 records (26%)
  📊 PostgreSQL: Batch 14 completed - 28000/100000 records (28%)
  📊 PostgreSQL: Batch 15 completed - 30000/100000 records (30%)
  📊 PostgreSQL: Batch 16 completed - 32000/100000 records (32%)
  📊 PostgreSQL: Batch 17 completed - 34000/100000 records (34%)
  📊 PostgreSQL: Batch 18 completed - 36000/100000 records (36%)
  📊 PostgreSQL: Batch 19 completed - 38000/100000 records (38%)
  📊 PostgreSQL: Batch 20 completed - 40000/100000 records (40%)
  📊 PostgreSQL: Batch 21 completed - 42000/100000 records (42%)
  📊 PostgreSQL: Batch 22 completed - 44000/100000 records (44%)
  📊 PostgreSQL: Batch 23 completed - 46000/100000 records (46%)
  📊 PostgreSQL: Batch 24 completed - 48000/100000 records (48%)
  📊 PostgreSQL: Batch 25 completed - 50000/100000 records (50%)
  📊 PostgreSQL: Batch 26 completed - 52000/100000 records (52%)
  📊 PostgreSQL: Batch 27 completed - 54000/100000 records (54%)
  📊 PostgreSQL: Batch 28 completed - 56000/100000 records (56%)
  📊 PostgreSQL: Batch 29 completed - 58000/100000 records (58%)
  📊 PostgreSQL: Batch 30 completed - 60000/100000 records (60%)
  📊 PostgreSQL: Batch 31 completed - 62000/100000 records (62%)
  📊 PostgreSQL: Batch 32 completed - 64000/100000 records (64%)
  📊 PostgreSQL: Batch 33 completed - 66000/100000 records (66%)
  📊 PostgreSQL: Batch 34 completed - 68000/100000 records (68%)
  📊 PostgreSQL: Batch 35 completed - 70000/100000 records (70%)
  📊 PostgreSQL: Batch 36 completed - 72000/100000 records (72%)
  📊 PostgreSQL: Batch 37 completed - 74000/100000 records (74%)
  📊 PostgreSQL: Batch 38 completed - 76000/100000 records (76%)
  📊 PostgreSQL: Batch 39 completed - 78000/100000 records (78%)
  📊 PostgreSQL: Batch 40 completed - 80000/100000 records (80%)
  📊 PostgreSQL: Batch 41 completed - 82000/100000 records (82%)
  📊 PostgreSQL: Batch 42 completed - 84000/100000 records (84%)
  📊 PostgreSQL: Batch 43 completed - 86000/100000 records (86%)
  📊 PostgreSQL: Batch 44 completed - 88000/100000 records (88%)
  📊 PostgreSQL: Batch 45 completed - 90000/100000 records (90%)
  📊 PostgreSQL: Batch 46 completed - 92000/100000 records (92%)
  📊 PostgreSQL: Batch 47 completed - 94000/100000 records (94%)
  📊 PostgreSQL: Batch 48 completed - 96000/100000 records (96%)
  📊 PostgreSQL: Batch 49 completed - 98000/100000 records (98%)
  📊 PostgreSQL: Batch 50 completed - 100000/100000 records (100%)
   ✅ PostgreSQL data generation: 340202ms (293 rps)
🚀 Generating HBase data with optimized commands...
  📊 HBase: Batch 1 completed - 2000/100000 records (2%)
  📊 HBase: Batch 2 completed - 4000/100000 records (4%)
  📊 HBase: Batch 3 completed - 6000/100000 records (6%)
  📊 HBase: Batch 4 completed - 8000/100000 records (8%)
  📊 HBase: Batch 5 completed - 10000/100000 records (10%)
  📊 HBase: Batch 6 completed - 12000/100000 records (12%)
  📊 HBase: Batch 7 completed - 14000/100000 records (14%)
  📊 HBase: Batch 8 completed - 16000/100000 records (16%)
  📊 HBase: Batch 9 completed - 18000/100000 records (18%)
  📊 HBase: Batch 10 completed - 20000/100000 records (20%)
  📊 HBase: Batch 11 completed - 22000/100000 records (22%)
  📊 HBase: Batch 12 completed - 24000/100000 records (24%)
  📊 HBase: Batch 13 completed - 26000/100000 records (26%)
  📊 HBase: Batch 14 completed - 28000/100000 records (28%)
  📊 HBase: Batch 15 completed - 30000/100000 records (30%)
  📊 HBase: Batch 16 completed - 32000/100000 records (32%)
  📊 HBase: Batch 17 completed - 34000/100000 records (34%)
  📊 HBase: Batch 18 completed - 36000/100000 records (36%)
  📊 HBase: Batch 19 completed - 38000/100000 records (38%)
  📊 HBase: Batch 20 completed - 40000/100000 records (40%)
  📊 HBase: Batch 21 completed - 42000/100000 records (42%)
  📊 HBase: Batch 22 completed - 44000/100000 records (44%)
  📊 HBase: Batch 23 completed - 46000/100000 records (46%)
  📊 HBase: Batch 24 completed - 48000/100000 records (48%)
  📊 HBase: Batch 25 completed - 50000/100000 records (50%)
  📊 HBase: Batch 26 completed - 52000/100000 records (52%)
  📊 HBase: Batch 27 completed - 54000/100000 records (54%)
  📊 HBase: Batch 28 completed - 56000/100000 records (56%)
  📊 HBase: Batch 29 completed - 58000/100000 records (58%)
  📊 HBase: Batch 30 completed - 60000/100000 records (60%)
  📊 HBase: Batch 31 completed - 62000/100000 records (62%)
  📊 HBase: Batch 32 completed - 64000/100000 records (64%)
  📊 HBase: Batch 33 completed - 66000/100000 records (66%)
  📊 HBase: Batch 34 completed - 68000/100000 records (68%)
  📊 HBase: Batch 35 completed - 70000/100000 records (70%)
  📊 HBase: Batch 36 completed - 72000/100000 records (72%)
  📊 HBase: Batch 37 completed - 74000/100000 records (74%)
  📊 HBase: Batch 38 completed - 76000/100000 records (76%)
  📊 HBase: Batch 39 completed - 78000/100000 records (78%)
  📊 HBase: Batch 40 completed - 80000/100000 records (80%)
  📊 HBase: Batch 41 completed - 82000/100000 records (82%)
  📊 HBase: Batch 42 completed - 84000/100000 records (84%)
  📊 HBase: Batch 43 completed - 86000/100000 records (86%)
  📊 HBase: Batch 44 completed - 88000/100000 records (88%)
  📊 HBase: Batch 45 completed - 90000/100000 records (90%)
  📊 HBase: Batch 46 completed - 92000/100000 records (92%)
  📊 HBase: Batch 47 completed - 94000/100000 records (94%)
  📊 HBase: Batch 48 completed - 96000/100000 records (96%)
  📊 HBase: Batch 49 completed - 98000/100000 records (98%)
  📊 HBase: Batch 50 completed - 100000/100000 records (100%)
   ✅ HBase data generation: 447511ms (223 rps)

📊 OPTIMIZED DATA GENERATION SUMMARY
====================================
🎯 Scale: 100000 records
📈 Performance Comparison:
   PostgreSQL: 340202ms (293 rps)
   HBase:      447511ms (223 rps)

💾 Generated File Sizes:
   📄 PostgreSQL data: 39M (soal_psql_100000.csv)
   📄 HBase data: 123M (soal_hbase_100000.hbase)
   📄 Schools: 4.0K (schools_100000.csv)
   📄 Konsentrasi: 4.0K (konsentrasi_100000.csv)
   📄 Taksonomi: 4.0K (taksonomi_100000.csv)
   📊 PostgreSQL generation is 23% faster than HBase

✅ OPTIMIZED test data for scale 100000 generated successfully!
