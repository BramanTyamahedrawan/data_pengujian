=== OPTIMIZED GENERATING TEST DATA FOR SCALE: 1000000 ===
📝 Generating reference data with optimizations...
   ✅ Reference data generated: 10 schools, 20 konsentrasi, 15 taksonomi
📝 Generating 1000000 soalujian records with optimizations...
🚀 Generating PostgreSQL data with batch processing...
  📊 PostgreSQL: Batch 1 completed - 20000/1000000 records (2%)
  📊 PostgreSQL: Batch 2 completed - 40000/1000000 records (4%)
  📊 PostgreSQL: Batch 3 completed - 60000/1000000 records (6%)
  📊 PostgreSQL: Batch 4 completed - 80000/1000000 records (8%)
  📊 PostgreSQL: Batch 5 completed - 100000/1000000 records (10%)
  📊 PostgreSQL: Batch 6 completed - 120000/1000000 records (12%)
  📊 PostgreSQL: Batch 7 completed - 140000/1000000 records (14%)
  📊 PostgreSQL: Batch 8 completed - 160000/1000000 records (16%)
  📊 PostgreSQL: Batch 9 completed - 180000/1000000 records (18%)
  📊 PostgreSQL: Batch 10 completed - 200000/1000000 records (20%)
  📊 PostgreSQL: Batch 11 completed - 220000/1000000 records (22%)
  📊 PostgreSQL: Batch 12 completed - 240000/1000000 records (24%)
  📊 PostgreSQL: Batch 13 completed - 260000/1000000 records (26%)
  📊 PostgreSQL: Batch 14 completed - 280000/1000000 records (28%)
  📊 PostgreSQL: Batch 15 completed - 300000/1000000 records (30%)
  📊 PostgreSQL: Batch 16 completed - 320000/1000000 records (32%)
  📊 PostgreSQL: Batch 17 completed - 340000/1000000 records (34%)
  📊 PostgreSQL: Batch 18 completed - 360000/1000000 records (36%)
  📊 PostgreSQL: Batch 19 completed - 380000/1000000 records (38%)
  📊 PostgreSQL: Batch 20 completed - 400000/1000000 records (40%)
  📊 PostgreSQL: Batch 21 completed - 420000/1000000 records (42%)
  📊 PostgreSQL: Batch 22 completed - 440000/1000000 records (44%)
  📊 PostgreSQL: Batch 23 completed - 460000/1000000 records (46%)
  📊 PostgreSQL: Batch 24 completed - 480000/1000000 records (48%)
  📊 PostgreSQL: Batch 25 completed - 500000/1000000 records (50%)
  📊 PostgreSQL: Batch 26 completed - 520000/1000000 records (52%)
  📊 PostgreSQL: Batch 27 completed - 540000/1000000 records (54%)
  📊 PostgreSQL: Batch 28 completed - 560000/1000000 records (56%)
  📊 PostgreSQL: Batch 29 completed - 580000/1000000 records (58%)
  📊 PostgreSQL: Batch 30 completed - 600000/1000000 records (60%)
  📊 PostgreSQL: Batch 31 completed - 620000/1000000 records (62%)
  📊 PostgreSQL: Batch 32 completed - 640000/1000000 records (64%)
  📊 PostgreSQL: Batch 33 completed - 660000/1000000 records (66%)
  📊 PostgreSQL: Batch 34 completed - 680000/1000000 records (68%)
  📊 PostgreSQL: Batch 35 completed - 700000/1000000 records (70%)
  📊 PostgreSQL: Batch 36 completed - 720000/1000000 records (72%)
  📊 PostgreSQL: Batch 37 completed - 740000/1000000 records (74%)
  📊 PostgreSQL: Batch 38 completed - 760000/1000000 records (76%)
  📊 PostgreSQL: Batch 39 completed - 780000/1000000 records (78%)
  📊 PostgreSQL: Batch 40 completed - 800000/1000000 records (80%)
  📊 PostgreSQL: Batch 41 completed - 820000/1000000 records (82%)
  📊 PostgreSQL: Batch 42 completed - 840000/1000000 records (84%)
  📊 PostgreSQL: Batch 43 completed - 860000/1000000 records (86%)
  📊 PostgreSQL: Batch 44 completed - 880000/1000000 records (88%)
  📊 PostgreSQL: Batch 45 completed - 900000/1000000 records (90%)
  📊 PostgreSQL: Batch 46 completed - 920000/1000000 records (92%)
  📊 PostgreSQL: Batch 47 completed - 940000/1000000 records (94%)
  📊 PostgreSQL: Batch 48 completed - 960000/1000000 records (96%)
  📊 PostgreSQL: Batch 49 completed - 980000/1000000 records (98%)
  📊 PostgreSQL: Batch 50 completed - 1000000/1000000 records (100%)
   ✅ PostgreSQL data generation: 3421480ms (292 rps)
🚀 Generating HBase data with optimized commands...
  📊 HBase: Batch 1 completed - 20000/1000000 records (2%)
  📊 HBase: Batch 2 completed - 40000/1000000 records (4%)
  📊 HBase: Batch 3 completed - 60000/1000000 records (6%)
  📊 HBase: Batch 4 completed - 80000/1000000 records (8%)
  📊 HBase: Batch 5 completed - 100000/1000000 records (10%)
  📊 HBase: Batch 6 completed - 120000/1000000 records (12%)
  📊 HBase: Batch 7 completed - 140000/1000000 records (14%)
  📊 HBase: Batch 8 completed - 160000/1000000 records (16%)
  📊 HBase: Batch 9 completed - 180000/1000000 records (18%)
  📊 HBase: Batch 10 completed - 200000/1000000 records (20%)
  📊 HBase: Batch 11 completed - 220000/1000000 records (22%)
  📊 HBase: Batch 12 completed - 240000/1000000 records (24%)
  📊 HBase: Batch 13 completed - 260000/1000000 records (26%)
  📊 HBase: Batch 14 completed - 280000/1000000 records (28%)
  📊 HBase: Batch 15 completed - 300000/1000000 records (30%)
  📊 HBase: Batch 16 completed - 320000/1000000 records (32%)
  📊 HBase: Batch 17 completed - 340000/1000000 records (34%)
  📊 HBase: Batch 18 completed - 360000/1000000 records (36%)
  📊 HBase: Batch 19 completed - 380000/1000000 records (38%)
  📊 HBase: Batch 20 completed - 400000/1000000 records (40%)
  📊 HBase: Batch 21 completed - 420000/1000000 records (42%)
  📊 HBase: Batch 22 completed - 440000/1000000 records (44%)
  📊 HBase: Batch 23 completed - 460000/1000000 records (46%)
  📊 HBase: Batch 24 completed - 480000/1000000 records (48%)
  📊 HBase: Batch 25 completed - 500000/1000000 records (50%)
  📊 HBase: Batch 26 completed - 520000/1000000 records (52%)
  📊 HBase: Batch 27 completed - 540000/1000000 records (54%)
  📊 HBase: Batch 28 completed - 560000/1000000 records (56%)
  📊 HBase: Batch 29 completed - 580000/1000000 records (58%)
  📊 HBase: Batch 30 completed - 600000/1000000 records (60%)
  📊 HBase: Batch 31 completed - 620000/1000000 records (62%)
  📊 HBase: Batch 32 completed - 640000/1000000 records (64%)
  📊 HBase: Batch 33 completed - 660000/1000000 records (66%)
  📊 HBase: Batch 34 completed - 680000/1000000 records (68%)
  📊 HBase: Batch 35 completed - 700000/1000000 records (70%)
  📊 HBase: Batch 36 completed - 720000/1000000 records (72%)
  📊 HBase: Batch 37 completed - 740000/1000000 records (74%)
  📊 HBase: Batch 38 completed - 760000/1000000 records (76%)
  📊 HBase: Batch 39 completed - 780000/1000000 records (78%)
  📊 HBase: Batch 40 completed - 800000/1000000 records (80%)
  📊 HBase: Batch 41 completed - 820000/1000000 records (82%)
  📊 HBase: Batch 42 completed - 840000/1000000 records (84%)
  📊 HBase: Batch 43 completed - 860000/1000000 records (86%)
  📊 HBase: Batch 44 completed - 880000/1000000 records (88%)
  📊 HBase: Batch 45 completed - 900000/1000000 records (90%)
  📊 HBase: Batch 46 completed - 920000/1000000 records (92%)
  📊 HBase: Batch 47 completed - 940000/1000000 records (94%)
  📊 HBase: Batch 48 completed - 960000/1000000 records (96%)
  📊 HBase: Batch 49 completed - 980000/1000000 records (98%)
  📊 HBase: Batch 50 completed - 1000000/1000000 records (100%)
   ✅ HBase data generation: 4544649ms (220 rps)

📊 OPTIMIZED DATA GENERATION SUMMARY
====================================
🎯 Scale: 1000000 records
📈 Performance Comparison:
   PostgreSQL: 3421480ms (292 rps)
   HBase:      4544649ms (220 rps)

💾 Generated File Sizes:
   📄 PostgreSQL data: 385M (soal_psql_1000000.csv)
   📄 HBase data: 1.2G (soal_hbase_1000000.hbase)
   📄 Schools: 4.0K (schools_1000000.csv)
   📄 Konsentrasi: 4.0K (konsentrasi_1000000.csv)
   📄 Taksonomi: 4.0K (taksonomi_1000000.csv)
   📊 PostgreSQL generation is 24% faster than HBase

✅ OPTIMIZED test data for scale 1000000 generated successfully!
